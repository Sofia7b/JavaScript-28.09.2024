/* 
Підрахунок елементів різних типів у масиві.

1. Створіть вихідний масив, що містить значення різних типів, як елементів, 
   наприклад: [true, 'hello', 5, 12, -200, false, false, 'word'] але бажано 
   більш довгий та різноманітний.

2. Створіть об'єкт-колекцію (хеш) з іменами типів у вигляді ключів та 0 як 
   значення, наприклад: { number: 0, string: 0, boolean: 0 }

3. Пройдіться по масиву циклом for..of і для кожного елемента масиву, збільшуйте 
   відповідне значення в об'єкті-колекції.

4. Змініть приклад: видаліть усі ключі з початкової колекції та додайте їх 
   динамічно у циклі.
*/

let array = [
    true, 'hello', 5, 12, -200, false, false, 'word',
    -1, {}, 'масив', {}, [], [], ()=>{}, ()=>{},
];

// количество элементов разных типов
// ключ   значение
// тип -> количество 
let hash = { 
    number: 0, 
    string: 0, 
    boolean: 0,
    object: 0,     // {}, []

    function: 0,   
};

// hash.boolean
// hash["boolean"]

// NaN: Not a Number

for (const element of array) {
    hash[typeof(element)]++;
}


/*
for (const key in hash) {
    console.log(key, hash[key]);
}
*/

console.log('Статические свойства:');
console.log(hash);


// Удаление свойств объекта hash
hash = {};

// подсчет количества элементов разных типов с динамическим
// добавлением свойств в объект hash
for (const element of array) {
    // получить тип элемента массива array
    const type = typeof(element);

    // проверить, есть ли такое свойство в hash
    if (type in hash) {
        // если есть, то ув6личить свойство на 1
        hash[type]++;
    }
    else {
        // иначе создать свойство, записать в него 1 
        hash[type] = 1;
    }
} 

console.log('Динамические свойства:');
console.log(hash);
